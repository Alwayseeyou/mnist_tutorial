代码：
import numpy as np
from sklearn.datasets import fetch_mldata
from sklearn.model_selection import train_test_split, cross_val_score
from sklearn.naive_bayes import BernoulliNB

# download and read mnist
mnist = fetch_mldata('MNIST original', data_home='./')

# 'mnist.data' is 70k x 784 array, each row represents the pixels from a 28x28=784 image
# 'mnist.target' is 70k x 1 array, each row represents the target class of the corresponding image
images = mnist.data
targets = mnist.target

# make the value of pixels from [0, 255] to [0, 1] for further process
X = mnist.data / 255.
Y = mnist.target

X_train, X_test, Y_train, Y_test = train_test_split(X[::10], Y[::10], test_size=1000)

model = BernoulliNB()
model.fit(X_train,Y_train)

predictY = model.predict(X_test) 
train_accuracy = cross_val_score(model,X_train,Y_train,cv=5)
test_accuracy = cross_val_score(model,X_test,Y_test,cv=5)

print('Training accuracy: %0.2f%%' % (np.mean(train_accuracy*100)))
print('Testing accuracy: %0.2f%%' % (np.mean(test_accuracy*100)))
结果：
Training accuracy: 83.07%
Testing accuracy: 81.00%